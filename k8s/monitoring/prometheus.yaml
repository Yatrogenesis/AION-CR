apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: aion-cr-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'aion-cr-production'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'aion-cr-api'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - aion-cr
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: aion-cr-api-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
          - source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_service_name

      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: node-exporter
          - source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace

      - job_name: 'postgres-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - aion-cr
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: postgres-exporter

      - job_name: 'redis-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - aion-cr
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: redis-exporter

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

  alert_rules.yml: |
    groups:
    - name: aion-cr.rules
      rules:
      - alert: AionCRHighErrorRate
        expr: rate(aion_cr_errors_total[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: High error rate detected in AION-CR API
          description: "Error rate is {{ $value }} errors per second"

      - alert: AionCRHighLatency
        expr: histogram_quantile(0.95, rate(aion_cr_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: High latency detected in AION-CR API
          description: "95th percentile latency is {{ $value }} seconds"

      - alert: AionCRDatabaseConnections
        expr: pg_stat_database_numbackends{datname="aion_cr"} > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: High number of database connections
          description: "Database has {{ $value }} active connections"

      - alert: AionCRMemoryUsage
        expr: (container_memory_usage_bytes{pod=~"aion-cr-api-.*"} / container_spec_memory_limit_bytes) > 0.9
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: High memory usage in AION-CR pods
          description: "Memory usage is {{ $value | humanizePercentage }}"

      - alert: AionCRPodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total{namespace="aion-cr"}[15m]) > 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Pod is crash looping
          description: "Pod {{ $labels.pod }} is restarting frequently"

      - alert: AionCRMLModelAccuracy
        expr: aion_cr_ml_model_accuracy < 0.85
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: ML model accuracy dropped
          description: "Model accuracy is {{ $value | humanizePercentage }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: aion-cr-monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.50.1
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=30d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
          name: web
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: aion-cr-monitoring
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: web
  selector:
    app: prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: aion-cr-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 100Gi